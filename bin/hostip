#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'date'
require_relative '../lib/hostip'
require 'ipaddr'

class App
  VERSION = '0.2.0'

  attr_reader :options

  def initialize(arguments)
    @arguments = arguments

    # Set defaults
    @options = OpenStruct.new
    @options.verbose = false
    @options.city = false
    @options.geo = false
    @options.country = false
    @options.abbrev = false
    @options.ip = nil

    @opts = OptionParser.new
  end

  # Parse options, check arguments, then process the command
  def run

    if parsed_options? && arguments_valid?

      puts "Start at #{DateTime.now}\n\n" if @options.verbose

      process_command

      puts "\nFinished at #{DateTime.now}" if @options.verbose

    else
      output_usage
    end

  end

  protected

  def parsed_options?
    @opts.on('-v', '--version', 'display version')	{ output_version ; exit 0 }
    @opts.on('-h', '--help', 'display help')		{ output_help }
    @opts.on('-V', '--verbose', 'be more verbose')	{ @options.verbose = true }
    @opts.on('--city', 'get the city only i.e. Munich')			{ @options.city = true }
    @opts.on('--geo', 'get longtitude and latitude, i.e. 12.45, 12.23')			{ @options.geo = true }
    @opts.on('--country', 'get the country i.e. Germany')		{ @options.country = true }
    @opts.on('--country-abbrev', 'get the country abbreviation i.e. US')	{ @options.abbrev = true }

    @opts.parse!(@arguments) rescue return false

    process_options

    true
  end

  # Performs post-parse processing on options
  def process_options

  end

  # True if required arguments were provided
  def arguments_valid?
    # Check if IP is passed and IP is a valid IP
    begin
      if @arguments[0] && IPAddr.new(@arguments[0])
        @options.ip = @arguments[0]
        return true
      end
    rescue Exception
      return false
    end
    # No IP passed, also good!
    true
  end

  def output_help
    output_version
    output_usage
  end

  def output_usage
    puts @opts.help
    exit 1
  end

  def output_version
    puts "#{File.basename(__FILE__)} version #{VERSION}"
  end

  def process_command
    hostip = Hostip.new

    unless @options.ip
      @options.ip = hostip.ip
      puts @options.ip
    end
    if @options.city
      puts hostip.city(@options.ip)
    end
    if @options.geo
      puts "#{hostip.geo_location(@options.ip)["lat"]} #{hostip.geo_location(@options.ip)["long"]}"
    end
    if @options.country
      puts hostip.country_name(@options.ip)
    end
    if @options.abbrev
      puts hostip.country_abbrev(@options.ip)
    end

  end

end

app = App.new(ARGV)
app.run

